# Configuração do pytest para o projeto bradax-broker

[tool:pytest]
# Diretórios de teste
testpaths = tests

# Padrão de arquivos de teste
python_files = test_*.py *_test.py

# Padrão de funções de teste
python_functions = test_*

# Padrão de classes de teste
python_classes = Test*

# Adicionar src ao PYTHONPATH
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10

# Marcar testes assíncronos
markers =
    asyncio: marca testes que usam asyncio
    unit: testes unitários rápidos
    integration: testes de integração que podem ser mais lentos
    api: testes específicos da API
    providers: testes dos providers LLM
    config: testes de configuração
    
# Configuração para testes assíncronos
asyncio_mode = auto

# Ignorar avisos específicos
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:importlib._bootstrap
    
# Configuração de cobertura
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Mostrar linhas perdidas
show_missing = True

# Precisão de porcentagem
precision = 2

# Pular arquivos vazios
skip_empty = True
